# This file contains Julia type definitions with JSON serialization.
#
# WARNING: This is an auto-generated file.
# Do not edit directly - any changes will be overwritten.

module EnzymemlV2

using JSON3
using StructTypes

#=
  Type Definitions
  ---------------
  Main struct definitions with their fields and JSON serialization support.
=#
"""
Represents a base unit in the unit definition.
"""
Base.@kwdef mutable struct BaseUnit
    """
    Kind of the base unit (e.g., meter, kilogram, second).
    """
    kind::String

    """
    Exponent of the base unit in the unit definition.
    """
    exponent::Int64

    """
    Multiplier of the base unit in the unit definition.
    """
    multiplier::Union{Float64, Nothing} = nothing

    """
    Scale of the base unit in the unit definition.
    """
    scale::Union{Float64, Nothing} = nothing

end

export BaseUnit

"""
Represents a unit definition that is based on the SI unit system.
"""
Base.@kwdef mutable struct UnitDefinition
    """
    Unique identifier of the unit definition.
    """
    id::Union{String, Nothing} = nothing

    """
    Common name of the unit definition.
    """
    name::Union{String, Nothing} = nothing

    """
    Base units that define the unit.
    """
    base_units::Union{Vector{
    BaseUnit}, Nothing} = nothing

end

export UnitDefinition

"""
This object describes a single entity of a measurement, which
corresponds to one species (Protein, Complex, SmallMolecule). It
contains time course data for that species, including the initial
amount, prepared amount, and measured data points over time. Endpoint
data is treated as a time course data point with only one data point.
"""
Base.@kwdef mutable struct MeasurementData
    """
    The identifier for the described reactant.
    """
    species_id::String

    """
    Initial amount of the measurement data. This must be the same as the
    first data point in the array.
    """
    initial::Float64

    """
    SI unit of the data that was measured.
    """
    data_unit::
    UnitDefinition

    """
    Type of data that was measured (e.g. concentration, absorbance, etc.)
    """
    data_type::String

    """
    Amount of the the species before starting the measurement. This
    field can be used for specifying the prepared amount of a species
    in the reaction mix. Not to be confused with , specifying the
    concentration of a species at the first data point from the array.
    """
    prepared::Union{Float64, Nothing} = nothing

    """
    Data that was measured.
    """
    data::Union{Vector{Float64}, Nothing} = nothing

    """
    Corresponding time points of the .
    """
    time::Union{Vector{Float64}, Nothing} = nothing

    """
    Unit of the time points of the .
    """
    time_unit::Union{
    UnitDefinition, Nothing} = nothing

    """
    Whether or not the data has been generated by simulation. Default
    is False.
    """
    is_simulated::Bool

end

export MeasurementData

"""
This object describes a single measurement, which includes time
course data of any type defined in DataTypes. It contains initial
concentrations and measurement data for all species involved in the
experiment. Multiple measurements can be grouped together using the
group_id field to indicate they are part of the same experimental
series.
"""
Base.@kwdef mutable struct Measurement
    """
    Unique identifier of the measurement.
    """
    id::String

    """
    Name of the measurement
    """
    name::String

    """
    Measurement data of all species that were part of the measurement. A
    species refers to a Protein, Complex, or SmallMolecule.
    """
    species_data::Union{Vector{
    MeasurementData}, Nothing} = nothing

    """
    User-defined group ID to signal relationships between measurements.
    """
    group_id::Union{String, Nothing} = nothing

    """
    pH value of the measurement.
    """
    ph::Union{Float64, Nothing} = nothing

    """
    Temperature of the measurement.
    """
    temperature::Union{Float64, Nothing} = nothing

    """
    Unit of the temperature of the measurement.
    """
    temperature_unit::Union{
    UnitDefinition, Nothing} = nothing

end

export Measurement

"""
This object describes parameters used in kinetic models, including
estimated values, bounds, and associated uncertainties. Parameters can
represent rate constants, binding constants, or other numerical values
that appear in rate equations or other mathematical expressions.
"""
Base.@kwdef mutable struct Parameter
    """
    Identifier of the parameter.
    """
    id::String

    """
    Name of the parameter.
    """
    name::String

    """
    Equation symbol of the parameter.
    """
    symbol::String

    """
    Numerical value of the estimated parameter.
    """
    value::Union{Float64, Nothing} = nothing

    """
    Unit of the estimated parameter.
    """
    unit::Union{
    UnitDefinition, Nothing} = nothing

    """
    Initial value that was used for the parameter estimation.
    """
    initial_value::Union{Float64, Nothing} = nothing

    """
    Upper bound for the parameter value that was used for the parameter
    estimation
    """
    upper_bound::Union{Float64, Nothing} = nothing

    """
    Lower bound for the parameter value that was used for the parameter
    estimation
    """
    lower_bound::Union{Float64, Nothing} = nothing

    """
    Standard error of the estimated parameter.
    """
    stderr::Union{Float64, Nothing} = nothing

    """
    Specifies if this parameter is constant. Default is True.
    """
    constant::Union{Bool, Nothing} = nothing

end

export Parameter

"""
This object describes a variable that is part of an equation.
Variables can represent species concentrations, time, or other
quantities that appear in mathematical expressions. Each variable must
have a unique identifier, name, and symbol that is used in equations.
"""
Base.@kwdef mutable struct Variable
    """
    Identifier of the variable.
    """
    id::String

    """
    Name of the variable.
    """
    name::String

    """
    Equation symbol of the variable.
    """
    symbol::String

end

export Variable

"""
The Equation object describes a mathematical equation used to model
parts of a reaction system.
"""
Base.@kwdef mutable struct Equation
    """
    Identifier of a defined species (SmallMolecule, Protein, Complex).
    Represents the left hand side of the equation.
    """
    species_id::String

    """
    Mathematical expression of the equation. Represents the right hand
    side of the equation.
    """
    equation::String

    """
    Type of the equation.
    """
    equation_type::String

    """
    List of variables that are part of the equation
    """
    variables::Union{Vector{
    Variable}, Nothing} = nothing

end

export Equation

"""
This object is part of the object and describes a species
(SmallMolecule, Protein, Complex) participating in the reaction.
THE TYPE OF THE REACTION ELEMENT IS SPECIFIED IN THE TYPE FIELD. The
stochiometry is of the species is specified in the field, whereas
negative values indicate that the species is a reactant and positive
values indicate that the species is a product of the reaction.
"""
Base.@kwdef mutable struct ReactionElement
    """
    Internal identifier to either a protein or reactant defined in the
    EnzymeML Document.
    """
    species_id::String

    """
    Float number representing the associated stoichiometry. Negative
    values indicate that the species is a reactant and positive values
    indicate that the species is a product of the reaction.
    """
    stoichiometry::Float64

end

export ReactionElement

"""
The Reaction object represents a chemical or enzymatic reaction
and holds the different species and modifiers that are part of the
reaction.
"""
Base.@kwdef mutable struct Reaction
    """
    Unique identifier of the reaction.
    """
    id::String

    """
    Name of the reaction.
    """
    name::String

    """
    Whether the reaction is reversible or irreversible. Default is False.
    """
    reversible::Bool

    """
    Mathematical expression of the reaction.
    """
    kinetic_law::Union{
    Equation, Nothing} = nothing

    """
    List of reaction elements that are part of the reaction.
    """
    species::Union{Vector{
    ReactionElement}, Nothing} = nothing

    """
    List of reaction elements that are not part of the reaction but
    influence it.
    """
    modifiers::Union{Vector{String}, Nothing} = nothing

end

export Reaction

"""
The SmallMolecule object represents small chemical compounds that
participate in the experiment as substrates, products, or modifiers.
It captures key molecular identifiers like SMILES and InChI.
"""
Base.@kwdef mutable struct SmallMolecule
    """
    Identifier of the small molecule, such as a Pubchem ID, ChEBI ID, or a
    custom identifier.
    """
    id::String

    """
    Name of the small molecule.
    """
    name::String

    """
    Whether the concentration of the small molecule is constant through
    the experiment or not. Default is False.
    """
    constant::Bool

    """
    Identifier of the vessel this small molecule has been used in.
    """
    vessel_id::Union{String, Nothing} = nothing

    """
    Canonical Simplified Molecular-Input Line-Entry System (SMILES)
    encoding of the small molecule.
    """
    canonical_smiles::Union{String, Nothing} = nothing

    """
    International Chemical Identifier (InChI) encoding of the small
    molecule.
    """
    inchi::Union{String, Nothing} = nothing

    """
    Hashed International Chemical Identifier (InChIKey) encoding of the
    small molecule.
    """
    inchikey::Union{String, Nothing} = nothing

    """
    List of references to publications, database entries, etc. that
    describe or reference the small molecule.
    """
    references::Union{Vector{String}, Nothing} = nothing

end

export SmallMolecule

"""
The Complex object allows the grouping of multiple species using
their . This enables the representation of protein-small molecule
complexes (e.g., enzyme-substrate complexes) as well as buffer or
solvent mixtures (combinations of SmallMolecule species).
"""
Base.@kwdef mutable struct Complex
    """
    Unique identifier of the complex.
    """
    id::String

    """
    Name of the complex.
    """
    name::String

    """
    Whether the concentration of the complex is constant through the
    experiment or not. Default is False.
    """
    constant::Bool

    """
    Unique identifier of the vessel this complex has been used in.
    """
    vessel_id::Union{String, Nothing} = nothing

    """
    Array of IDs the complex contains
    """
    participants::Union{Vector{String}, Nothing} = nothing

end

export Complex

"""
The Protein object represents enzymes and other proteins involved in
the experiment.
"""
Base.@kwdef mutable struct Protein
    """
    Identifier of the protein, such as a UniProt ID, or a custom
    identifier.
    """
    id::String

    """
    Name of the protein.
    """
    name::String

    """
    Whether the concentration of the protein is constant through the
    experiment or not. Default is True.
    """
    constant::Bool

    """
    Amino acid sequence of the protein
    """
    sequence::Union{String, Nothing} = nothing

    """
    Identifier of the vessel this protein has been applied to.
    """
    vessel_id::Union{String, Nothing} = nothing

    """
    EC number of the protein.
    """
    ecnumber::Union{String, Nothing} = nothing

    """
    Expression host organism of the protein.
    """
    organism::Union{String, Nothing} = nothing

    """
    Taxonomy identifier of the expression host.
    """
    organism_tax_id::Union{String, Nothing} = nothing

    """
    List of references to publications, database entries, etc. that
    describe or reference the protein.
    """
    references::Union{Vector{String}, Nothing} = nothing

end

export Protein

"""
The Vessel object represents containers used to conduct experiments,
such as reaction vessels, microplates, or bioreactors. It captures key
properties like volume and whether the volume remains constant during
the experiment.
"""
Base.@kwdef mutable struct Vessel
    """
    Unique identifier of the vessel.
    """
    id::String

    """
    Name of the used vessel.
    """
    name::String

    """
    Volumetric value of the vessel.
    """
    volume::Float64

    """
    Volumetric unit of the vessel.
    """
    unit::
    UnitDefinition

    """
    Whether the volume of the vessel is constant or not. Default is True.
    """
    constant::Bool

end

export Vessel

"""
The Creator object represents an individual author or contributor who
has participated in creating or modifying the EnzymeML Document. It
captures essential personal information such as their name and contact
details, allowing proper attribution and enabling communication with
the document's creators.
"""
Base.@kwdef mutable struct Creator
    """
    Given name of the author or contributor.
    """
    given_name::String

    """
    Family name of the author or contributor.
    """
    family_name::String

    """
    Email address of the author or contributor.
    """
    mail::String

end

export Creator

"""
The EnzymeMLDocument is the root object that serves as a container
for all components of an enzymatic experiment. It includes essential
metadata about the document itself, such as its title and creation/
modification dates, as well as references to related publications
and databases. Additionally, it contains comprehensive information
about the experimental setup, including reaction vessels, proteins,
complexes, small molecules, reactions, measurements, equations, and
parameters.
"""
Base.@kwdef mutable struct EnzymeMLDocument
    """
    Title of the EnzymeML Document.
    """
    name::String

    """
    Date the EnzymeML Document was created.
    """
    created::Union{String, Nothing} = nothing

    """
    Date the EnzymeML Document was modified.
    """
    modified::Union{String, Nothing} = nothing

    """
    Contains descriptions of all authors that are part of the experiment.
    """
    creators::Union{Vector{
    Creator}, Nothing} = nothing

    """
    Contains descriptions of all vessels that are part of the experiment.
    """
    vessels::Union{Vector{
    Vessel}, Nothing} = nothing

    """
    Contains descriptions of all proteins that are part of the experiment
    that may be referenced in reactions, measurements, and equations.
    """
    proteins::Union{Vector{
    Protein}, Nothing} = nothing

    """
    Contains descriptions of all complexes that are part of the experiment
    that may be referenced in reactions, measurements, and equations.
    """
    complexes::Union{Vector{
    Complex}, Nothing} = nothing

    """
    Contains descriptions of all reactants that are part of the experiment
    that may be referenced in reactions, measurements, and equations.
    """
    small_molecules::Union{Vector{
    SmallMolecule}, Nothing} = nothing

    """
    Contains descriptions of all reactions that are part of the
    experiment.
    """
    reactions::Union{Vector{
    Reaction}, Nothing} = nothing

    """
    Contains descriptions of all measurements that are part of the
    experiment.
    """
    measurements::Union{Vector{
    Measurement}, Nothing} = nothing

    """
    Contains descriptions of all equations that are part of the
    experiment.
    """
    equations::Union{Vector{
    Equation}, Nothing} = nothing

    """
    Contains descriptions of all parameters that are part of the
    experiment and may be used in equations.
    """
    parameters::Union{Vector{
    Parameter}, Nothing} = nothing

    """
    Contains references to publications, databases, and arbitrary links to
    the web.
    """
    references::Union{Vector{String}, Nothing} = nothing

end

export EnzymeMLDocument


end # module enzymeml_v2